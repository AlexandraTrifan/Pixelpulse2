os: Windows Server 2012 R2

platform:
 - x86

install:
  - ps: (new-object System.Net.WebClient).Downloadfile("http://www.7-zip.org/a/7z1514-x64.exe", "c:\projects\7zip_installer.exe")
  - c:\projects\7zip_installer.exe /S /D=c:\projects\7zip_tool
  - set PATH=c:\projects\7zip_tool;%PATH%
  - ps: |
      If (!(Test-Path -Path "c:\mingw.7z")) {
        (new-object System.Net.WebClient).Downloadfile("https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/5.2.0/threads-posix/dwarf/i686-5.2.0-release-posix-dwarf-rt_v4-rev0.7z", "c:\mingw.7z")
      }
  - 7z x -y "c:\mingw.7z" -o"C:\" > nul
  - ps: |
      If (!(Test-Path -Path "c:\msys.zip")) {
        (new-object System.Net.WebClient).Downloadfile("https://sourceforge.net/projects/mingw-w64/files/External%20binary%20packages%20%28Win64%20hosted%29/MSYS%20%2832-bit%29/MSYS-20111123.zip", "c:\msys.zip")
      }
  - 7z x -y "c:\msys.zip" -o"C:\" > nul
  - set QTDIR=C:\Qt\5.4\mingw491_32
  - set PATH=C:\Program Files (x86)\MSBuild\12.0\bin\;C:\mingw32\bin;C:\msys\bin\;%QTDIR%\bin;%PATH%
  - ps: (new-object System.Net.WebClient).Downloadfile("http://swdownloads.analog.com/cse/build/libusb-1.0-hp.7z", "c:\libusb.7z")
  - 7z x -y "c:\libusb.7z" -o"C:\libusb" > nul

build_script:
    #clone and build libsmu with mingw
  - git clone https://github.com/analogdevicesinc/libsmu.git C:\libsmu
  - ps: pushd "C:\libsmu"
  - git checkout rework
  - mkdir build
  - cd build
  - cmake -G "MSYS Makefiles" \
    -DLIBUSB_LIBRARIES="C:\\libusb\\MinGW32\\static\\libusb-1.0.a" \
    -DLIBUSB_INCLUDE_DIRS="C:\\libusb\\include\\libusb-1.0" \
    -DBoost_USE_STATIC_LIBS=ON \
    -DBUILD_STATIC_LIB=OFF \
    -DBUILD_EXAMPLES=OFF \
    -DBUILD_TESTS=OFF \
    -DBOOST_ROOT="C:\\Libraries\\boost_1_62_0" \
    -DBUILD_PYTHON=OFF \
    ..
  - mingw32-make -j8
  
  - ps: popd
  - qmake pixelpulse2.pro "LIBSMU_LIBRARY = C:\libsmu\build\src\libsmu.dll.a" "LIBSMU_INCLUDE_PATH = C:\libsmu\include" 
  - mingw32-make -j8

after_build:
- ps: |
    If (!(Test-Path -Path "distrib.zip")) {
      windeployqt --qmldir qml release\pixelpulse2.exe --dir distrib
      cp C:\OpenSSL-Win32\libeay32.dll distrib
      cp C:\OpenSSL-Win32\libssl32.dll distrib
      cp C:\OpenSSL-Win32\ssleay32.dll distrib
      cp C:\OpenSSL-Win32\bin\msvcr120.dll distrib
      cp C:\libsmu\build\src\libsmu.dll distrib
      7z a -y distrib.zip distrib
    }
    appveyor PushArtifact release\pixelpulse2.exe
    appveyor PushArtifact distrib.zip

cache:
 - c:\mingw.7z -> appveyor.yml
 - distrib.zip -> appveyor.yml
 - c:\msys.zip -> appveyor.yml
