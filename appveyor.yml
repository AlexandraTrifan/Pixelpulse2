os: Windows Server 2012 R2

platform:
  - x86
  - x64

install:
  - ps: >-
      If ($env:Platform -Match "x86") {
        $env:MINGW_ARCHIVE="i686-5.3.0-release-posix-dwarf-rt_v4-rev0.7z"
        $env:MINGW_DIR="mingw32"
        $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-i686.7z"
      } Else {
        $env:MINGW_ARCHIVE="x86_64-5.3.0-release-posix-seh-rt_v4-rev0.7z"
        $env:MINGW_DIR="mingw64"
        $env:LIBUSB_ARCHIVE="libusb-1.0-win-hp-x86_64.7z"
      }
  - ps: (new-object System.Net.WebClient).Downloadfile("http://downloads.sourceforge.net/mingw-w64/$env:MINGW_ARCHIVE", "c:\mingw.7z")
  - 7z x -y "c:\mingw.7z" -o"C:\" > nul
  - set QTDIR=C:\Qt\5.5\mingw492_32
  - set PATH=C:\Program Files (x86)\MSBuild\12.0\bin\;C:\%MINGW_DIR%\bin;C:\msys64\bin\;%QTDIR%\bin;%PATH%
  - ps: (new-object System.Net.WebClient).Downloadfile("http://swdownloads.analog.com/cse/m1k/$env:LIBUSB_ARCHIVE", "c:\libusb.7z")
  - 7z x -y "c:\libusb.7z" -o"C:\libusb" > nul

build_script:
  - git submodule update --init --recursive
  - qmake pixelpulse2.pro
  - mingw32-make -j8

after_build:
- ps: |
    If (!(Test-Path -Path "distrib.zip")) {
      windeployqt --qmldir qml release\pixelpulse2.exe --dir distrib
      cp C:\OpenSSL-Win32\libeay32.dll distrib
      cp C:\OpenSSL-Win32\libssl32.dll distrib
      cp C:\OpenSSL-Win32\ssleay32.dll distrib
      cp C:\OpenSSL-Win32\bin\msvcr120.dll distrib
      7z a -y distrib.zip distrib
    }
    appveyor PushArtifact release\pixelpulse2.exe
    appveyor PushArtifact distrib.zip

cache:
 - distrib.zip -> appveyor.yml
 - c:\mingw.7z -> appveyor.yml
